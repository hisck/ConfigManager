- name: "ec2 Instance launcher"
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    region: us-east-1
    instance_type: t2.micro
    keypair: AnsibleProject # pem file name
    ec2name: AnsibleInstance
    current_dir: "{{ playbook_dir }}"
    networkDict: {
                    'assign_public_ip'  : true,
                    'subnet_id'         : 'subnet-02bb40087654b6b37'
                  }
    hostspath: "/etc/ansible/hosts"
    ansible_host_string: "ansible_ssh_user=ubuntu ansible_ssh_private_key_file={{ current_dir }}/{{ keypair }}-key.pem"
  
  tasks:
    - name: "Creating a private EC2 key"
      amazon.aws.ec2_key:
        name: "{{ keypair }}-key"
        region: "{{ region }}"
      register: ec2_key

    - name: "Saving private key"
      ansible.builtin.copy:
        content: "{{ ec2_key.key.private_key }}"
        dest: "{{ keypair }}-key.pem"
        mode: '0600'
      when: ec2_key.changed

    - name: "Launching ec2 Instance"
      amazon.aws.ec2_instance:
        key_name: "{{ keypair }}-key"
        security_group: default
        instance_type: "{{ instance_type }}"
        image_id: ami-053b0d53c279acc90
        wait: true
        region: "{{ region }}"
        count: 1  # default
        name: "{{ ec2name }}"
        state: running
        network: "{{networkDict}}"
      register: ec2_return

    - name: "Get ec2 instance data"
      ec2_instance_info:
        region: "{{ region }}"
        instance_ids: "{{ item.instance_id }}"
      with_items: "{{ ec2_return.instances }}"
      register: ec2_instances

    - name: "Adding the newly created EC2 instance to hosts file"
      become: true
      ansible.builtin.lineinfile:
        path: "{{hostspath}}"
        state: present
        insertafter: '[ec2]'
        line: "{{ item.public_ip_address }} {{ ansible_host_string }}"
      with_items: "{{ ec2_instances.results[0].instances }}"

    - wait_for: path={{ hostspath }} search_regex={{ ansible_host_string }}

    - name: Add IP to known hosts
      ansible.builtin.add_host: 
        name: "{{ item.public_ip_address }}"
      with_items: "{{ ec2_instances.results[0].instances }}"